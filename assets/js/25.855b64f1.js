(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{375:function(e,a,l){"use strict";l.r(a);var t=l(2),v=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"一、为什么要用-make"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、为什么要用-make"}},[e._v("#")]),e._v(" 一、为什么要用 make")]),e._v(" "),a("ul",[a("li",[e._v("一个词来说就是："),a("strong",[e._v("自动化")])]),e._v(" "),a("li",[e._v("只需要写一个 Makefile，就可以通过一句命令来自动化地完成编译、测试、打包、部署等一系列操作\n"),a("ul",[a("li",[e._v("即使是 Linux 内核，也可以通过一句 make 来完成编译")])])]),e._v(" "),a("li",[e._v("而且它不仅仅是用来编译 C/C++ 的，还可以用来执行任何命令\n"),a("ul",[a("li",[e._v("比如说用 make 来简化输入命令的")]),e._v(" "),a("li",[e._v("有些时候会比 shell 脚本更容易编写\n"),a("ul",[a("li",[e._v("处理依赖、读取命令行输入等 make 都会帮你完成")])])])])])]),e._v(" "),a("h2",{attrs:{id:"二、如何编写-makefile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、如何编写-makefile"}},[e._v("#")]),e._v(" 二、如何编写 Makefile")]),e._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token target symbol"}},[e._v("target ...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" prerequisites ...\n    command\n    ...\n    ...\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("ul",[a("li",[a("p",[e._v("target: 目标文件 / 可执行文件/ 标签")]),e._v(" "),a("ul",[a("li",[a("p",[e._v(".PHONY 定义伪目标")]),e._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code")]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"})])])]),e._v(" "),a("p",[e._v(".PHONY: clean")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])]),e._v(" "),a("li",[a("p",[e._v("prerequisites: 依赖文件 / 依赖 target")])]),e._v(" "),a("li",[a("p",[e._v("command: 执行的命令")]),e._v(" "),a("ul",[a("li",[e._v("即触发 target 时执行的 shell 命令")]),e._v(" "),a("li",[e._v("开头加 "),a("code",[e._v("@")]),e._v(" 不会在终端输出命令本身")]),e._v(" "),a("li",[e._v("开头加 "),a("code",[e._v("-")]),e._v(" 会忽略命令执行失败的错误，继续向下执行")])])])]),e._v(" "),a("h2",{attrs:{id:"三、makefile-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、makefile-变量"}},[e._v("#")]),e._v(" 三、Makefile 变量")]),e._v(" "),a("ul",[a("li",[e._v("变量定义：\n"),a("ul",[a("li",[e._v("VAR = value，value 会在使用时才被展开（可以在文件任何位置）")]),e._v(" "),a("li",[e._v("VAR := value，右边的 value 会在定义时就被展开")]),e._v(" "),a("li",[e._v("VAR ?= value，如果 VAR 未定义，则定义为 value")]),e._v(" "),a("li",[e._v("VAR += value，将 value 追加到 VAR 的末尾")])])]),e._v(" "),a("li",[e._v("变量引用：\n"),a("ul",[a("li",[e._v("$(VAR)：引用变量 VAR（Makefile 中的变量引用）")]),e._v(" "),a("li",[e._v("${VAR}：引用变量 VAR（Shell 中的变量引用）")]),e._v(" "),a("li",[e._v("会以“字符串”的形式展开（类似 C 中的宏展开）")]),e._v(" "),a("li",[e._v("可以通过 $(shell command) 来将 command 的输出结果作为替换的值")]),e._v(" "),a("li",[e._v("可以直接使用环境变量，如 $(PATH)")])])])]),e._v(" "),a("h2",{attrs:{id:"四、make-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、make-命令"}},[e._v("#")]),e._v(" 四、make 命令")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("make 后面可以跟多个 target，指定执行的内容")]),e._v(" "),a("ul",[a("li",[e._v("如果不跟任何 target，则默认执行第一个 target")])])]),e._v(" "),a("li",[a("p",[e._v("可以在 make 后面直接通过 "),a("code",[e._v("VAR=value")]),e._v(" 的形式来定义变量")]),e._v(" "),a("ul",[a("li",[e._v("优先级：make 后 > Makefile 中定义 > 环境变量（make 前）")])])]),e._v(" "),a("li",[a("p",[e._v("一些常用的 make 命令 flag：")]),e._v(" "),a("ul",[a("li",[e._v("make -f "),a("em",[e._v("FILE")]),e._v("：指定 Makefile 文件")]),e._v(" "),a("li",[e._v("make -n：不执行命令，只显示命令")]),e._v(" "),a("li",[e._v("make -s：不显示命令")]),e._v(" "),a("li",[e._v("make -j N：并行执行 N 个任务")]),e._v(" "),a("li",[e._v("make -k：忽略错误，继续执行")])])])]),e._v(" "),a("h2",{attrs:{id:"五、相关资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、相关资料"}},[e._v("#")]),e._v(" 五、相关资料")]),e._v(" "),a("ul",[a("li",[e._v("🏆 和我一起写 Makefile："),a("a",{attrs:{href:"https://seisman.github.io/how-to-write-makefile/",target:"_blank",rel:"noopener noreferrer"}},[e._v("seisman/how-to-write-makefile"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("GNU make 官方文档："),a("a",{attrs:{href:"https://www.gnu.org/software/make/manual/make.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("GNU make"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=v.exports}}]);